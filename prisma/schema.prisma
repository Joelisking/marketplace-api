generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  email    String  @unique
  password String
  role     Role
  storeId  String? @unique
  orders   Order[]
  store    Store?  @relation("VendorStore", fields: [storeId], references: [id])
}

model Store {
  id       String    @id @default(cuid())
  name     String
  slug     String    @unique
  logoUrl  String?
  orders   Order[]
  products Product[]
  owner    User?     @relation("VendorStore")
}

model Product {
  id            String         @id @default(cuid())
  storeId       String
  name          String
  price         Int
  stock         Int
  imageUrl      String
  visibleMarket Boolean        @default(true)
  orderItems    OrderItem[]
  store         Store          @relation(fields: [storeId], references: [id])
  images        ProductImage[]

  @@index([storeId, name])
}

model ProductImage {
  id        String   @id @default(cuid())
  productId String
  fileName  String
  fileUrl   String
  altText   String?
  isPrimary Boolean  @default(false)
  sortOrder Int      @default(0)
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, isPrimary])
  @@index([productId, sortOrder])
}

model Order {
  id            String        @id @default(cuid())
  customerId    String
  storeId       String
  status        OrderStatus
  paymentStatus PaymentStatus
  total         Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  customer      User          @relation(fields: [customerId], references: [id])
  store         Store         @relation(fields: [storeId], references: [id])
  items         OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

enum Role {
  CUSTOMER
  VENDOR
}

enum PaymentStatus {
  UNPAID
  PAID
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
}
